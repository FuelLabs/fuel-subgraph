version: '3'
services:
#  graph-node:
#    image: 'ghcr.io/fuellabs/fuel-graph-node:6701915'
#    platform: linux/amd64
#    depends_on:
#      ipfs:
#        condition: service_healthy
#      postgres:
#        condition: service_healthy
#    environment:
#      POSTGRES_HOST: postgres
#      POSTGRES_USER: "${DB_USER}"
#      POSTGRES_PASSWORD: "${DB_PASS}"
#      POSTGRES_DB: "${DB_NAME}"
#      IPFS: 'ipfs:5001'
#      GRAPH_LOG: info
#      GRAPH_NODE_CONFIG: /config/docker-graph-config.toml
#    volumes:
#      - './docker-graph-config.toml:/config/docker-graph-config.toml'
#    ports:
#      - '8000:8000'
#      - '8001:8001'
#      - '8020:8020'
#      - '8030:8030'
#      - '8040:8040'
#  ipfs:
#    image: 'ipfs/kubo:v0.15.0'
#    volumes:
#      - './data/ipfs:/data/ipfs'
#    ports:
#      - '5001:5001'
#    healthcheck:
#        test: ["CMD", "ipfs", "id"]
#        interval: 10s
#        timeout: 10s
#        retries: 5
#  postgres:
#    image: 'postgres:14'
#    environment:
#      POSTGRES_USER: "${DB_USER}"
#      POSTGRES_PASSWORD: "${DB_PASS}"
#      POSTGRES_DB: "${DB_NAME}"
#      PGDATA: /var/lib/postgresql/data
#      POSTGRES_INITDB_ARGS: '-E UTF8 --locale=C'
#    volumes:
#      - './data/postgres:/var/lib/postgresql/data'
#    healthcheck:
#        test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
#        interval: 10s
#        timeout: 10s
#        retries: 5
  firehose:
    build:
      context: ./firehose
    ports:
      - '10015:10015'
      - '10016:10016'
      - '10017:10017'
    volumes:
      - './data/firehose:/data/storage_dir'
    command: beta-5.fuel.network